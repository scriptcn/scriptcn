{
  "name": "Scriptcn",
  "tagline": "homepage",
  "body": "<%\r\nvar Title = \"Nodejs.Asp\";\r\nvar Name = \"关于\";\r\n%>\r\n<!DOCTYPE html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<script type=\"text/javascript\" src=\"http://libs.baidu.com/jquery/1.9.0/jquery.js\"></script>\r\n<title>{$Title} - <%=Name%></title>\r\n<link type=\"text/css\" rel=\"stylesheet\" href=\"system/style.css\" />\r\n</head>\r\n<body>\r\n<!--include file=\"head.html\"-->\r\n<div class=\"main\">\r\n<h2>什么是<label>Nodejs.Asp</label>？</h2>\r\n<div class='pre'>\r\n<label>Nodejs.Asp</label>是基于Nodejs开发的WEB服务器，支持或模拟大部分ASP（JScript.asp）的结构、语法风格。但绝不等同于Microsoft ASP。\r\n</div>\r\n<h2><label>Nodejs.Asp</label>如何构造文件结构？</h2>\r\n<div class='pre'>\r\n和大多Script后端语言一样，在工作目录建立.asp或.node文件即可，支持ssi，支持无后缀名映射，支持静态文件缓存。<br />\r\n<pre style=\"font-size:16px;font-family:Fixedsys;line-height:16px;\">\r\nNodejs.Asp\r\n       │\r\n       │ server.js\r\n       │ start.bat\r\n       │ tpl.js\r\n       │ \r\n       └─web\r\n        │ favicon.ico\r\n        │ foot.html\r\n        │ form.node\r\n        │ head.html\r\n        │ index.asp\r\n        │ list.node\r\n        │ upload.asp\r\n        │ \r\n        ├─images\r\n        │ logo.png\r\n        │ \r\n        ├─system\r\n        │ form.js\r\n        │ style.css\r\n        │ system.js\r\n        │ \r\n        └─upfile\r\n</pre>\r\n</div>\r\n<h2><label>Nodejs.Asp</label>如何编码？</h2>\r\n<div class='pre'>\r\n       <dl>\r\n       <dt>include:</dt>\r\n              <dd><!--include file=\"inc.html\"--></dd>\r\n              <dd>或者自定义引用格式如：{#include(inc.html)}</dd>\r\n       <dt>tag:</dt>\r\n              <dd><% Nodejs code %></dd>\r\n              <dd>或者自定义引用格式如：<? ... ?></dd>\r\n       <dt>Application:</dt>\r\n              <dd>Application(key, value);       //赋值</dd>\r\n              <dd>Application(key);       //读取</dd>\r\n              <dd>Application.del(key);       //删除</dd>\r\n              <dd>Application.del();       //清空Application对象</dd>\r\n       <dt>Session:</dt>\r\n              <dd>Session(key, value);       //赋值</dd>\r\n              <dd>Session(key);       //读取</dd>\r\n              <dd>Session.del(key);       //删除</dd>\r\n              <dd>Session.del();       //清空用户Session对象</dd>\r\n       <dt>Cookie:</dt>\r\n              <dd>Cookie(key, value);       //赋值</dd>\r\n              <dd>Cookie(key);       //读取</dd>\r\n              <dd>Cookie.del(key);       //删除</dd>\r\n       <dt>Request:</dt>\r\n              <dd>Request.QueryString是一个json对象，例如：{\"action\":\"tpl\",\"mode\":\"test\"}</dd>\r\n              <dd>Request.Form是一个json对象，例如：{\"user\":\"访客 \",\"age\":\"38\",\"live\":[\"上网\",\"编程\"],\"city\":\"武汉\",\"content\":\"这家伙很懒，什么都没说！\",\"addr\":\"127.0.0.1\"}</dd>\r\n              <dd>Request['addr'];       //客户端ip</dd>\r\n              <dd>其它，可查询Nodejs Request标准对象</dd>\r\n       <dt>Response:</dt>\r\n              <dd>Response.Write(注意w大写)，输出内容，等同于echo(<label>Nodejs.Asp</label>内置输出函数)</dd>\r\n              <dd>Response.Clear，清空缓冲区</dd>\r\n              <dd>Response.End，终止输出</dd>\r\n              <dd>Response.setHeaders，设置headers</dd>\r\n              <dd>Response.writeHead、Response.write、Response.end等参考Nodejs Response标准对象</dd>\r\n       <dt><label>Nodejs.Asp</label>内置方法</dt>\r\n              <dd>echo(\"string%sNumber%s\", 'a', 1);       //输出，支持%s变量替换</dd>\r\n              <dd>clear();       //同Response.Clear</dd>\r\n              <dd>exit();       //同Response.End</dd>\r\n              <dd>Sys.date();       //服务器事件</dd>\r\n              <dd>Sys.md5(str);       //md5</dd>\r\n              <dd>Sys.guid();       //获取一个唯一值</dd>\r\n              <dd>Sys.?更多扩展可参考源码</dd>\r\n       <dt>Nodejs系统对象</dt>\r\n              <dd>fs = require('fs')</dd>\r\n              <dd>url = require('url')</dd>\r\n              <dd>query = require('querystring')</dd>\r\n              <dd>以上对象可以直接使用，如：</dd>\r\n              <dd>fs.writeFile('log.txt', Str, function(err, data) {}</dd>\r\n              <dd>可以在页面直接使用require方法，支持node_modules和.js扩展。如：</dd>\r\n              <dd>var io = require('socket.io');</dd>\r\n       <dt>Upload:</dt>\r\n              <dd>无组件文件上传，支持多文件，可查看本站提供的<a href='upload'>DEMO页面</a></dd>\r\n       </dl>\r\n</div>\r\n<h2><label>Nodejs.Asp</label>目前未实现的有哪些？</h2>\r\n<div class='pre'>\r\n       <label>Nodejs.Asp</label>不支持ActiveX控件，但Nodejs拥有强大的第三方node_modules的支持，足以弥补不支持ActiveX的遗憾。\r\n       不支持异步调用回调函数输出到页面，支持console输出到控制台。建议使用同步操作。\r\n</div>\r\n<h3>感谢您的阅读！</h3>\r\n       <h2>Source:</h2>\r\n       <div class=\"pre code\"><%echo(fs.readFileSync('index.asp').toString().replace(/</g, \"<\").replace(/\\r\\n/g, \"<br />\").replace(/\\t/g, Array(8).join(\" \")));%></div>\r\n</div>\r\n<!--include file=\"foot.html\"-->\r\n</body>\r\n</html>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}